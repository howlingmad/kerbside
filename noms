#!/usr/bin/env python
# -*- coding=utf-8 -*-
# 
# Copyright Â© 2013 Alex Kilgour (alex at kil dot gr)
#
# This work is free. You can redistribute it and/or modify it under the
# terms of the Do What The Fuck You Want To Public License, Version 2,
# as published by Sam Hocevar. See the licence.txt file for more details.

from BeautifulSoup import BeautifulSoup
import urllib2
import re
from datetime import datetime as dt
import HTMLParser
import sys
import simplejson as simjson

# defaults to showing only todays traders
result = 0

# return the correct suffix for a date
def suffix(d):
    return 'th' if 11<=d<=13 else {1:'st',2:'nd',3:'rd'}.get(d%10, 'th')

# format a given date by adding the suffix
def custom_strftime(format, t):
    return t.strftime(format).replace('{S}', str(t.day) + suffix(t.day))

# run if the arguments are correct
if (len(sys.argv[1:]) < 2):

	# if run with 1, then show traders for the rest of the week
	if (len(sys.argv[1:]) == 1 and int(sys.argv[1]) == 1):
		result = 1

	# if run with 2, then output to json
	if (len(sys.argv[1:]) == 1 and int(sys.argv[1]) == 2):
		result = 2
		json = '{"weekly":['

	# todays date
	now = dt.now()

	# grab the listings page
	page = urllib2.urlopen('http://www.kerbfood.com/kings-cross/')
	soup = BeautifulSoup(page)

	# find the listings panel
	kerb = soup.find('div', 'rota_panel')
	kerbList = kerb.find('ul')

	# how many days left in the week (monday is 4 as there is no longer a stall on mondays)
	week = {'Mon': 4, 'Tue': 4, 'Wed': 3, 'Thu': 2, 'Fri': 1}
	left = 1
	if result == 1 or result == 2:
		for key, val in dict.items(week):
		    if key == now.strftime('%a'):
		    	left = val

	# iterate over the remaining days of the week to find traders
	first = True
	for day in kerbList.findAll('li', recursive=False, limit=left):
		date = re.sub('^date-', '', day['id'])
		date = dt.strptime(date, '%Y-%m-%d')
		if result == 2 and not first:
			json = json + ','
		if first:
			# still print if monday (no longer any stalls on a monday)
			if custom_strftime('%Y-%m-%d', now) != custom_strftime('%Y-%m-%d', date) and now.strftime('%a') != 'Mon':
				sys.exit()
			first = False
		traders = ""
		if result == 1:
			traders = custom_strftime('%a {S}', date) + ": "
		if result == 2:
			json = json + '{"date":"' + custom_strftime('%A {S}', date) + '","traders":['
		first = True
		for stall in day.findAll('li'):
			heading = stall.find('h4')
			h = HTMLParser.HTMLParser()
			name = h.unescape(heading.find('a').string)
			if first:
				traders = traders + name.title()
				if result == 2:
					json = json + '"' + name.title() + '"'
				first = False
			else:
				traders = traders + ", " + name.title()
				if result == 2:
					json = json + ',"' + name.title() + '"'
		if result == 0 or result == 1:
			print traders
		if result == 2:
			json = json + "]}"
	if result == 2:
		json = json + "]}"
		# write to file
		x = simjson.loads(json)

	  	f = open("data.json","w")
		simjson.dump(x, f)
		f.close()
else:
	# invalid argument use
    print "Invalid arguments. This only takes one argument. Run as 'noms 1' to show traders for the rest of the week. Run and 'noms 2' to output as data only."
